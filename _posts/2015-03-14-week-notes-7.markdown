---
title: 'Week notes #7'
date: 2015-03-14 16:55:00 Z
extract: You have to draw a line at one point or another around your audience and
  their technical prowess. Do you have to explain how inline images work? Or the peculiarities
  of the DOM? Where do you begin?
update: 
tags:
- week-notes
- css-tricks
- redesign
City:
- Plymouth
Country:
- UK
---

On Monday I published an article about the [HTML5 History API](https://css-tricks.com/using-the-html5-history-api/). It’s sort of crazy to think that I contribute to <span class="caps">CSS</span>-Tricks on a daily basis now, especially since I’ve been following [Chris’](https://twitter.com/chriscoyier) work for almost a decade. Back when I just started web development I had become immediately intoxicated by his website’s humility, nuance and grace, despite the overall trend of tech-focused websites.

<span class="caps">CSS</span>-Tricks has been, and will always be, a bastion against all things snark and so I’m honoured to help in any way I can.


## A note on technical writing

I’m not particularly familiar with writing code-based blog posts. If you skim the archives of my notes then you’ll find that pretty much all of them tend to push fiercely away from code-based examples. I suppose what I’m saying is that they were think-pieces (sigh) because I always felt intimidated whenever I talked about my love for Sass, or weird JavaScript things or any side of the technical underbelly of the web. I’ve watched the uglier parts of this community prey on the young and the naïve and I’d rather not be heard at all than experience the vitriol that’s been slung in their direction.

So I wrote stories and weird book reviews instead, but ignoring technical writing was foolish because documenting a specific problem (such as a demo for [inline SVG sprites](https://css-tricks.com/spriting-img/)) requires a completely different set of skills from fiction or think-piece writing.

You have to draw a line at one point or another around your audience and their technical prowess. Do you have to explain how inline images work? Or the peculiarities of the <span class="caps">DOM</span>? Where do you begin? Is it patronising for the majority of readers if you take the easy way out and explain a concept with jQuery? Or is it instead insulting if you disregard the troubles that less experienced folks might experience with this example?

The trouble is this: to write some CSS you must first [invent the universe](https://www.youtube.com/watch?v=7s664NsLeFM).

***

Besides that I’ve been working on a redesign of my personal website and so I’ve spent a lot of time thinking about what I want from it in the coming years. First I’m thinking about basic UX and organization (I love the idea of [URL-first design](http://warpspire.com/posts/url-design/)) and I want to write a lot more fiction so the site will need to compensate for that. Afterwards I’ll move onto basic performance improvements, switching hosts and, of course, typesetting.

The impetus for setting typographic details should always start from a reading of the text, hence my return to older posts in order to see how my writing style has changed over time. By next week I’ll have a general typographic system that I’ll dig into a little bit and show what I’m thinking about.
