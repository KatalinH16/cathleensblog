---
title: Spelunky
date: 2018-08-18 11:59:00 -07:00
categories:
- reading
- books
tags:
- Derek Yu
extract: My favorite book from the Boss Fight Books collection so far.
---

In my favorite book from the [Boss Fight Books](https://bossfightbooks.com/) collection, Derek Yu describes the process of designing and building the excellent rogue-like platformer [Spelunky](https://bossfightbooks.com/products/spelunky-by-derek-yu). There are far too many lovely moments to details but one of my favorite stories is where Derek describes how he handled the requests of a beta tester that found the game far too difficult:

> Interestingly enough, I noticed from the angry player’s posts that while he was getting more and more angry, he was also making progress, getting to the later levels and eventually beating the game. This convinced me that the difficulty itself was not the problem, and that I was right to not include an easy mode in the game, since it would have become an unnecessary crutch for players like him. The real culprits were all of the aggregate smaller annoyances that made interacting with the game more difficult. Spelunky did get easier with each update, but in a way that improved the core experience rather than watering it down. So in some sense, that angry player was right: The game was too hard. But not for the reasons he or I assumed. If we were talking about the game of tennis instead of Spelunky, it’s as though this player asked me to remove the net because he was having trouble hitting the ball over it, neither of us realizing that the real problem was that I gave him a racket with broken strings. 

I adore this little section because I find myself encountering this problem all the time in user testing sessions at work. A lot of users will say “I had a problem with X and so it would be better if it worked like Y.” However helpful this might be, designers must ignore their suggestions because X is most likely not the problem. 

It’s the effect, but it’s not the cause.